// Generated code from Butter Knife. Do not modify!
package com.bizzan.ui.home;

import android.content.Context;
import android.content.res.Resources;
import android.support.annotation.CallSuper;
import android.support.annotation.UiThread;
import android.support.design.widget.TabLayout;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import butterknife.Unbinder;
import butterknife.internal.Utils;
import com.bizzan.R;
import com.xw.repo.BubbleSeekBar;
import java.lang.IllegalStateException;
import java.lang.Override;

public class SixFragment_ViewBinding implements Unbinder {
  private SixFragment target;

  @UiThread
  public SixFragment_ViewBinding(SixFragment target, View source) {
    this.target = target;

    target.ibOpen = Utils.findRequiredViewAsType(source, R.id.ibOpen, "field 'ibOpen'", ImageButton.class);
    target.tvTitle = Utils.findRequiredViewAsType(source, R.id.tvTitle, "field 'tvTitle'", TextView.class);
    target.text_title_price = Utils.findRequiredViewAsType(source, R.id.text_title_price, "field 'text_title_price'", TextView.class);
    target.text_title_amount = Utils.findRequiredViewAsType(source, R.id.text_title_amount, "field 'text_title_amount'", TextView.class);
    target.ibMessage = Utils.findRequiredViewAsType(source, R.id.ibMessage, "field 'ibMessage'", ImageView.class);
    target.llTitle = Utils.findRequiredViewAsType(source, R.id.llTitle, "field 'llTitle'", LinearLayout.class);
    target.mRadioGroup = Utils.findRequiredViewAsType(source, R.id.mRadioGroup, "field 'mRadioGroup'", RadioGroup.class);
    target.mToAllLayout = Utils.findRequiredViewAsType(source, R.id.text_to_all, "field 'mToAllLayout'", RelativeLayout.class);
    target.mOneRecycler = Utils.findRequiredViewAsType(source, R.id.recyclerOne, "field 'mOneRecycler'", RecyclerView.class);
    target.mTwoRecycler = Utils.findRequiredViewAsType(source, R.id.recyclerTwo, "field 'mTwoRecycler'", RecyclerView.class);
    target.msixRecycler = Utils.findRequiredViewAsType(source, R.id.recyclersix, "field 'msixRecycler'", RecyclerView.class);
    target.mTvsix = Utils.findRequiredViewAsType(source, R.id.mTvsix, "field 'mTvsix'", TextView.class);
    target.mOneLayout = Utils.findRequiredViewAsType(source, R.id.mOneLayout, "field 'mOneLayout'", LinearLayout.class);
    target.mTwoLayout = Utils.findRequiredViewAsType(source, R.id.mTwoLayout, "field 'mTwoLayout'", LinearLayout.class);
    target.mOneShi = Utils.findRequiredViewAsType(source, R.id.mOneShi, "field 'mOneShi'", TextView.class);
    target.mOneXian = Utils.findRequiredViewAsType(source, R.id.mOneXian, "field 'mOneXian'", LinearLayout.class);
    target.mTwoShi = Utils.findRequiredViewAsType(source, R.id.mTwoShi, "field 'mTwoShi'", TextView.class);
    target.mTwoXian = Utils.findRequiredViewAsType(source, R.id.mTwoXian, "field 'mTwoXian'", LinearLayout.class);
    target.mOnePriceEdit = Utils.findRequiredViewAsType(source, R.id.mOnePrice, "field 'mOnePriceEdit'", EditText.class);
    target.mOneAdd = Utils.findRequiredViewAsType(source, R.id.mOneAdd, "field 'mOneAdd'", TextView.class);
    target.mOneSub = Utils.findRequiredViewAsType(source, R.id.mOneSum, "field 'mOneSub'", TextView.class);
    target.mTwoPriceEdit = Utils.findRequiredViewAsType(source, R.id.mTwoPrice, "field 'mTwoPriceEdit'", EditText.class);
    target.mTwoAdd = Utils.findRequiredViewAsType(source, R.id.mTwoAdd, "field 'mTwoAdd'", TextView.class);
    target.mTwoSub = Utils.findRequiredViewAsType(source, R.id.mTwoSub, "field 'mTwoSub'", TextView.class);
    target.mPanJia = Utils.findRequiredViewAsType(source, R.id.mTvPanJia, "field 'mPanJia'", TextView.class);
    target.mPanMoney = Utils.findRequiredViewAsType(source, R.id.mTvMoney, "field 'mPanMoney'", TextView.class);
    target.mOneYuE = Utils.findRequiredViewAsType(source, R.id.mOneYuE, "field 'mOneYuE'", TextView.class);
    target.mTwoYuE = Utils.findRequiredViewAsType(source, R.id.mTwoYuE, "field 'mTwoYuE'", TextView.class);
    target.mOneTcpEdit = Utils.findRequiredViewAsType(source, R.id.mOneTCP, "field 'mOneTcpEdit'", EditText.class);
    target.mTwoTcpEdit = Utils.findRequiredViewAsType(source, R.id.mTwoTCP, "field 'mTwoTcpEdit'", EditText.class);
    target.btnBuy = Utils.findRequiredViewAsType(source, R.id.btnOneBuy, "field 'btnBuy'", Button.class);
    target.btnSale = Utils.findRequiredViewAsType(source, R.id.btnTwoPost, "field 'btnSale'", Button.class);
    target.mOneDeal = Utils.findRequiredViewAsType(source, R.id.mOneDeal, "field 'mOneDeal'", TextView.class);
    target.mTwoDeal = Utils.findRequiredViewAsType(source, R.id.mTwoDeal, "field 'mTwoDeal'", TextView.class);
    target.btnLogin = Utils.findRequiredViewAsType(source, R.id.btn_toLogin, "field 'btnLogin'", TextView.class);
    target.mOneJiaoYi = Utils.findRequiredViewAsType(source, R.id.mOneJiaoYi, "field 'mOneJiaoYi'", RelativeLayout.class);
    target.mTwoJiaoYi = Utils.findRequiredViewAsType(source, R.id.mTwoJiaoYi, "field 'mTwoJiaoYi'", RelativeLayout.class);
    target.mOneSeekBar = Utils.findRequiredViewAsType(source, R.id.mOneSeekBar, "field 'mOneSeekBar'", BubbleSeekBar.class);
    target.mTwoSeekBar = Utils.findRequiredViewAsType(source, R.id.mTwoSeekBar, "field 'mTwoSeekBar'", BubbleSeekBar.class);
    target.ivCollect = Utils.findRequiredViewAsType(source, R.id.ivCollect, "field 'ivCollect'", ImageView.class);
    target.mTabOne = Utils.findRequiredViewAsType(source, R.id.mTabOne, "field 'mTabOne'", RadioButton.class);
    target.mTabTwo = Utils.findRequiredViewAsType(source, R.id.mTabTwo, "field 'mTabTwo'", RadioButton.class);
    target.llCurrentTrust = Utils.findRequiredViewAsType(source, R.id.ll_current_trust, "field 'llCurrentTrust'", LinearLayout.class);
    target.llHistoryTrust = Utils.findRequiredViewAsType(source, R.id.ll_history_trust, "field 'llHistoryTrust'", LinearLayout.class);
    target.tvCurrentTrust = Utils.findRequiredViewAsType(source, R.id.tv_current_trust, "field 'tvCurrentTrust'", TextView.class);
    target.tvHistoryTrust = Utils.findRequiredViewAsType(source, R.id.tv_history_trust, "field 'tvHistoryTrust'", TextView.class);
    target.currentTrustUnderline = Utils.findRequiredView(source, R.id.current_trust_underline, "field 'currentTrustUnderline'");
    target.historyTrustUnderline = Utils.findRequiredView(source, R.id.history_trust_underline, "field 'historyTrustUnderline'");
    target.tab = Utils.findRequiredViewAsType(source, R.id.tab, "field 'tab'", TabLayout.class);
    target.rlModelSpinner = Utils.findRequiredViewAsType(source, R.id.rl_model_spinner, "field 'rlModelSpinner'", RelativeLayout.class);
    target.tvModel = Utils.findRequiredViewAsType(source, R.id.tv_model, "field 'tvModel'", TextView.class);
    target.tvEntrust = Utils.findRequiredViewAsType(source, R.id.tv_entrust, "field 'tvEntrust'", TextView.class);
    target.rlEntrustSpinner = Utils.findRequiredViewAsType(source, R.id.rl_entrust_spinner, "field 'rlEntrustSpinner'", RelativeLayout.class);
    target.tvMultiples = Utils.findRequiredViewAsType(source, R.id.tv_multiples, "field 'tvMultiples'", TextView.class);
    target.rlMultiplesSpinner = Utils.findRequiredViewAsType(source, R.id.rl_multiples_spinner, "field 'rlMultiplesSpinner'", RelativeLayout.class);
    target.tvZhangColor = Utils.findRequiredViewAsType(source, R.id.tv_zhang_color, "field 'tvZhangColor'", TextView.class);
    target.Zhang = Utils.findRequiredViewAsType(source, R.id.Zhang, "field 'Zhang'", TextView.class);
    target.tvZhangColor2 = Utils.findRequiredViewAsType(source, R.id.tv_zhang_color2, "field 'tvZhangColor2'", TextView.class);
    target.Zhang2 = Utils.findRequiredViewAsType(source, R.id.Zhang2, "field 'Zhang2'", TextView.class);
    target.mOnetriggerPrice = Utils.findRequiredViewAsType(source, R.id.mOnetriggerPrice, "field 'mOnetriggerPrice'", EditText.class);
    target.mOnetrigger = Utils.findRequiredViewAsType(source, R.id.mOnetrigger, "field 'mOnetrigger'", LinearLayout.class);
    target.mTwotriggerPrice2 = Utils.findRequiredViewAsType(source, R.id.mTwotriggerPrice2, "field 'mTwotriggerPrice2'", EditText.class);
    target.mTwotrigger2 = Utils.findRequiredViewAsType(source, R.id.mTwotrigger2, "field 'mTwotrigger2'", LinearLayout.class);
    target.mOneSeekBarLin = Utils.findRequiredViewAsType(source, R.id.mOneSeekBarLin, "field 'mOneSeekBarLin'", LinearLayout.class);
    target.mTwoSeekBarLin = Utils.findRequiredViewAsType(source, R.id.mTwoSeekBarLin, "field 'mTwoSeekBarLin'", LinearLayout.class);
    target.buyEarnings = Utils.findRequiredViewAsType(source, R.id.buy_earnings, "field 'buyEarnings'", TextView.class);
    target.buyRate = Utils.findRequiredViewAsType(source, R.id.buy_rate, "field 'buyRate'", TextView.class);
    target.buyOne = Utils.findRequiredViewAsType(source, R.id.buy_one, "field 'buyOne'", TextView.class);
    target.buyTwo = Utils.findRequiredViewAsType(source, R.id.buy_two, "field 'buyTwo'", TextView.class);
    target.buyThree = Utils.findRequiredViewAsType(source, R.id.buy_three, "field 'buyThree'", TextView.class);
    target.buyFour = Utils.findRequiredViewAsType(source, R.id.buy_four, "field 'buyFour'", TextView.class);
    target.buyFive = Utils.findRequiredViewAsType(source, R.id.buy_five, "field 'buyFive'", TextView.class);
    target.buySix = Utils.findRequiredViewAsType(source, R.id.buy_six, "field 'buySix'", TextView.class);
    target.llBuy = Utils.findRequiredViewAsType(source, R.id.ll_buy, "field 'llBuy'", LinearLayout.class);
    target.sellEarnings = Utils.findRequiredViewAsType(source, R.id.sell_earnings, "field 'sellEarnings'", TextView.class);
    target.sellRate = Utils.findRequiredViewAsType(source, R.id.sell_rate, "field 'sellRate'", TextView.class);
    target.sellOne = Utils.findRequiredViewAsType(source, R.id.sell_one, "field 'sellOne'", TextView.class);
    target.sellTwo = Utils.findRequiredViewAsType(source, R.id.sell_two, "field 'sellTwo'", TextView.class);
    target.sellThree = Utils.findRequiredViewAsType(source, R.id.sell_three, "field 'sellThree'", TextView.class);
    target.sellFour = Utils.findRequiredViewAsType(source, R.id.sell_four, "field 'sellFour'", TextView.class);
    target.sellFive = Utils.findRequiredViewAsType(source, R.id.sell_five, "field 'sellFive'", TextView.class);
    target.sellSix = Utils.findRequiredViewAsType(source, R.id.sell_six, "field 'sellSix'", TextView.class);
    target.llSell = Utils.findRequiredViewAsType(source, R.id.ll_sell, "field 'llSell'", LinearLayout.class);
    target.llDeal = Utils.findRequiredViewAsType(source, R.id.ll_deal, "field 'llDeal'", LinearLayout.class);
    target.refreshLayout = Utils.findRequiredViewAsType(source, R.id.refreshLayout, "field 'refreshLayout'", SwipeRefreshLayout.class);
    target.tvFlat1 = Utils.findRequiredViewAsType(source, R.id.tv_flat1, "field 'tvFlat1'", TextView.class);
    target.tvFlat2 = Utils.findRequiredViewAsType(source, R.id.tv_flat2, "field 'tvFlat2'", TextView.class);

    Context context = source.getContext();
    Resources res = context.getResources();
    target.tabs = res.getStringArray(R.array.home_six_top_tab);
  }

  @Override
  @CallSuper
  public void unbind() {
    SixFragment target = this.target;
    if (target == null) throw new IllegalStateException("Bindings already cleared.");
    this.target = null;

    target.ibOpen = null;
    target.tvTitle = null;
    target.text_title_price = null;
    target.text_title_amount = null;
    target.ibMessage = null;
    target.llTitle = null;
    target.mRadioGroup = null;
    target.mToAllLayout = null;
    target.mOneRecycler = null;
    target.mTwoRecycler = null;
    target.msixRecycler = null;
    target.mTvsix = null;
    target.mOneLayout = null;
    target.mTwoLayout = null;
    target.mOneShi = null;
    target.mOneXian = null;
    target.mTwoShi = null;
    target.mTwoXian = null;
    target.mOnePriceEdit = null;
    target.mOneAdd = null;
    target.mOneSub = null;
    target.mTwoPriceEdit = null;
    target.mTwoAdd = null;
    target.mTwoSub = null;
    target.mPanJia = null;
    target.mPanMoney = null;
    target.mOneYuE = null;
    target.mTwoYuE = null;
    target.mOneTcpEdit = null;
    target.mTwoTcpEdit = null;
    target.btnBuy = null;
    target.btnSale = null;
    target.mOneDeal = null;
    target.mTwoDeal = null;
    target.btnLogin = null;
    target.mOneJiaoYi = null;
    target.mTwoJiaoYi = null;
    target.mOneSeekBar = null;
    target.mTwoSeekBar = null;
    target.ivCollect = null;
    target.mTabOne = null;
    target.mTabTwo = null;
    target.llCurrentTrust = null;
    target.llHistoryTrust = null;
    target.tvCurrentTrust = null;
    target.tvHistoryTrust = null;
    target.currentTrustUnderline = null;
    target.historyTrustUnderline = null;
    target.tab = null;
    target.rlModelSpinner = null;
    target.tvModel = null;
    target.tvEntrust = null;
    target.rlEntrustSpinner = null;
    target.tvMultiples = null;
    target.rlMultiplesSpinner = null;
    target.tvZhangColor = null;
    target.Zhang = null;
    target.tvZhangColor2 = null;
    target.Zhang2 = null;
    target.mOnetriggerPrice = null;
    target.mOnetrigger = null;
    target.mTwotriggerPrice2 = null;
    target.mTwotrigger2 = null;
    target.mOneSeekBarLin = null;
    target.mTwoSeekBarLin = null;
    target.buyEarnings = null;
    target.buyRate = null;
    target.buyOne = null;
    target.buyTwo = null;
    target.buyThree = null;
    target.buyFour = null;
    target.buyFive = null;
    target.buySix = null;
    target.llBuy = null;
    target.sellEarnings = null;
    target.sellRate = null;
    target.sellOne = null;
    target.sellTwo = null;
    target.sellThree = null;
    target.sellFour = null;
    target.sellFive = null;
    target.sellSix = null;
    target.llSell = null;
    target.llDeal = null;
    target.refreshLayout = null;
    target.tvFlat1 = null;
    target.tvFlat2 = null;
  }
}
